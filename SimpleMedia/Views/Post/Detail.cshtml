@model SimpleMedia.Dto.QueryPostDto
<div class="mb-3">
    <button type="button" class="btn btn-outline-secondary" onclick="history.back()">
        <i class="bi bi-arrow-left"></i> 回上一頁
    </button>
</div>
@if (Model != null)
{
    <div class="card my-3 shadow-sm">
        <div class="card-body">
            <h5 class="card-title">
                <i class="bi bi-person-circle"></i> @Model.UserName
            </h5>
            <p class="card-text">
                @Html.Raw(Html.Encode(Model.Content).Replace("\r\n", "<br />").Replace("\n", "<br />"))
            </p>
            <p class="text-muted small">
                上次更新時間：@Model.LastMaintainDt.ToString("yyyy-MM-dd HH:mm:ss")
            </p>

            @if (User.Identity.Name == Model.UserID)
            {
                <div class="btn-group mt-2" role="group">
                    <a href="/Post/Edit/@Model.PostID" class="btn btn-outline-primary btn-sm">
                        <i class="bi bi-pencil-square"></i> 編輯
                    </a>
                    <form method="post" action="/Post/Delete/@Model.PostID"
                          onsubmit="return confirm('確定要刪除這篇貼文？');" style="display:inline;">
                        <button type="submit" class="btn btn-outline-danger btn-sm">
                            <i class="bi bi-trash"></i> 刪除
                        </button>
                    </form>
                </div>
            }

            <hr />

            @if (User.Identity.IsAuthenticated)
            {
                <form method="post" action="/Comment/Create" class="mt-3">
                    <input type="hidden" name="PostID" value="@Model.PostID" />
                    <div class="mb-2">
                        <label for="Content-@Model.PostID" class="form-label"><strong>留言：</strong></label>
                        <textarea class="form-control" name="Content" id="Content-@Model.PostID" rows="2" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-success btn-sm">
                        <i class="bi bi-chat-dots"></i> 送出留言
                    </button>
                </form>
            }
            <br>
            <h6 class="text-secondary">留言區：</h6>

            @if (Model.Comments != null && Model.Comments.Any())
            {
                <div class="mt-4 border-start border-2 ps-3">

                    @foreach (var comment in Model.Comments)
                    {
                        <div class="mb-2 comment-block" id="comment-@comment.CommentID">
                            <div class="d-flex justify-content-between align-items-start">
                                <strong>@comment.UserName</strong>
                                @if (comment.UserID == User.Identity.Name)
                                {
                                    <div class="dropdown">
                                        <button class="btn btn-sm" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="bi bi-three-dots-vertical"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            <li>
                                                <a class="dropdown-item" href="#" onclick="showEditBox(@comment.CommentID)">編輯</a>
                                            </li>
                                            <li>
                                                <a class="dropdown-item text-danger" href="#" onclick="deleteComment(@comment.CommentID)">刪除</a>
                                            </li>
                                        </ul>
                                    </div>
                                }
                            </div>

                            <!-- 顯示留言 -->
                            <div class="comment-content mt-1">
                                <p class="mb-1">@Html.Raw(Html.Encode(comment.Content).Replace("\r\n", "<br />"))</p>
                                <small class="text-muted">@comment.LastMaintainDt.ToString("yyyy-MM-dd HH:mm")</small>
                            </div>

                            <!-- 編輯留言 -->
                            <div class="edit-box mt-1 d-none">
                                <textarea class="form-control mb-2" rows="2" id="editContent-@comment.CommentID">@comment.Content</textarea>
                                <div class="d-flex gap-2">
                                    <button class="btn btn-sm btn-primary" onclick="saveEdit(@comment.CommentID)">儲存</button>
                                    <button class="btn btn-sm btn-secondary" onclick="cancelEdit(@comment.CommentID)">取消</button>
                                </div>
                            </div>

                            <hr />
                        </div>

                    }
                </div>
            }
            else
            {
                <p class="text-muted mt-3">尚無留言</p>
            }
        </div>
    </div>
}
@section Scripts {
    <script>
        function showEditBox(commentId) {
            const block = document.getElementById(`comment-${commentId}`);
            block.querySelector('.comment-content').classList.add('d-none');
            block.querySelector('.edit-box').classList.remove('d-none');
        }

        function cancelEdit(commentId) {
            const block = document.getElementById(`comment-${commentId}`);
            block.querySelector('.comment-content').classList.remove('d-none');
            block.querySelector('.edit-box').classList.add('d-none');
        }

        function saveEdit(commentId) {
            const content = document.getElementById(`editContent-${commentId}`).value;

            fetch(`/Comment/Edit/${commentId}`, {
                method: 'Put',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ Content: content })
            })
            .then(res => res.ok ? location.reload() : alert("儲存失敗"));
        }

        function deleteComment(commentId) {
            if (!confirm("確定要刪除留言？")) return;

            fetch(`/Comment/Delete/${commentId}`, { method: 'DELETE' })
                .then(res => {
                    if (res.ok) {
                        const block = document.getElementById(`comment-${commentId}`);
                        block.classList.add('opacity-50');
                        setTimeout(() => block.remove(), 300);
                    } else {
                        alert("刪除失敗");
                    }
                });
        }
    </script>
}